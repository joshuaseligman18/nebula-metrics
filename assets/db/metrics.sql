PRAGMA journal_mode=WAL;

CREATE TABLE PROCESS (
    PID         INT  NOT NULL CHECK(PID >= 1),
    EXEC        TEXT NOT NULL,
    STARTTIME   TEXT NOT NULL,
    ISALIVE     INT  NOT NULL CHECK(ISALIVE == 0 OR ISALIVE == 1),
    PRIMARY KEY (PID)
);

CREATE TABLE CPU (
    CPUCORE     INT NOT NULL CHECK(CPUCORE >= 0),
    MHZ         REAL         CHECK(MHZ >= 0),
    TOTALCACHE  INT          CHECK(TOTALCACHE >= 0),
    PRIMARY KEY (CPUCORE)
);

CREATE TABLE PROCSTAT (
    PID             INT  NOT NULL,
    TIMESTAMP       TEXT NOT NULL,
    TOTALCPU        INT  NOT NULL CHECK(TOTALCPU >= 0),
    CPUCORE         INT  NOT NULL,
    VIRTUALMEMORY   INT  NOT NULL CHECK(VIRTUALMEMORY >= 0),
    RESIDENTMEMORY  INT  NOT NULL CHECK(RESIDENTMEMORY >= 0),
    SHAREDMEMORY    INT  NOT NULL CHECK(SHAREDMEMORY >= 0),
    PRIMARY KEY (PID, TIMESTAMP)
    FOREIGN KEY (PID)     REFERENCES PROCESS(PID),
    FOREIGN KEY (CPUCORE) REFERENCES CPU(CPUCORE)
);

CREATE TABLE CPUSTAT (
    CPUCORE     INT  NOT NULL,
    TIMESTAMP   TEXT NOT NULL,
    USAGE       REAL NOT NULL CHECK(USAGE >= 0),
    PRIMARY KEY (CPUCORE, TIMESTAMP)
);

CREATE TABLE MEMORY (
    TIMESTAMP   TEXT NOT NULL,
    TOTAL       INT  NOT NULL CHECK(TOTAL >= 0),
    FREE        INT  NOT NULL CHECK(FREE >= 0 AND FREE <= TOTAL),
    SWAPTOTAL   INT  NOT NULL CHECK(SWAPTOTAL >= 0),
    SWAPFREE    INT  NOT NULL CHECK(SWAPFREE >= 0 AND SWAPFREE <= SWAPTOTAL),
    PRIMARY KEY (TIMESTAMP)
);

CREATE TABLE DISK (
    DEVICENAME  TEXT NOT NULL,
    MOUNT       TEXT NOT NULL,
    PRIMARY KEY (DEVICENAME)
);

CREATE TABLE DISKSTAT (
    DEVICENAME  TEXT NOT NULL,
    TIMESTAMP   TEXT NOT NULL,
    USED        INT  NOT NULL CHECK(USED >= 0),
    AVAILABLE   INT  NOT NULL CHECK(AVAILABLE >= 0),
    PRIMARY KEY (DEVICENAME, TIMESTAMP),
    FOREIGN KEY (DEVICENAME) REFERENCES DISK(DEVICENAME)
);
