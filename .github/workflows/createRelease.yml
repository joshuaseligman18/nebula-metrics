name: Nebula Metrics Create Release

on:
  workflow_dispatch:
    inputs:
      bump-type:
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.NEBULA_CICD }}

    # TESTS
    # - name: Install cargo-llvm-cov
    #   run: cargo install cargo-llvm-cov
    # - name: Run Rust tests
    #   run: cargo llvm-cov --html --no-cfg-coverage --all-features

    # BUMP VERSION AND BUILD PACKAGE
    - name: Install cargo-edit
      run: |
        # Install dependencies for cargo-edit
        sudo apt update
        sudo apt install libssl-dev
        sudo apt install pkg-config
        cargo install cargo-edit
    - name: Bump version
      id: bumpVersion
      run: |
        cargo set-version --bump ${{ inputs.bump-type }}
        NEW_VERSION=$(cargo pkgid -p monitor | grep -o "\#.*" | cut -c 2-)
        echo "Bumped version to $NEW_VERSION"
        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
    - name: Install cargo-deb
      run: cargo install cargo-deb
    - name: Build package
      run: cargo deb --target x86_64-unknown-linux-gnu -p monitor
    # Commit the new version after we know the package was built successfully
    - name: Commit and push new version
      run: |
        git add Cargo.toml Cargo.lock
        git commit -m "v${{ steps.bumpVersion.outputs.new-version }}"
        git push

    # RELEASE
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ format('v{0}', steps.bumpVersion.outputs.new-version) }}
        generate_release_notes: true
        files: target/x86_64-unkonwn-linux-gnu/debian/*.deb
        fail_on_unmatched_files: true
        token: ${{ secrets.NEBULA_CICD }}
        # To be removed once the workflow is confirmed to work
        draft: true
